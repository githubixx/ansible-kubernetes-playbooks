---
- hosts: k8s_etcd
  remote_user: root

  tasks:
    - name: Copy Traefik client certificate files for etcd
      copy:
        src: "{{ k8s_ca_conf_directory }}/{{ item }}"
        dest: "{{ k8s_conf_dir }}/{{ item }}"
        mode: '0444'
        owner: root
        group: root
      become: yes
      become_method: sudo
      loop:
        - cert-traefik.pem
        - cert-traefik-key.pem

- hosts: k8s_kubectl

  tasks:
    - name: Check if etcd contains /traefik/acme/account/lock key
      shell: |
        ETCDCTL_API=3 sudo -E {{etcd_bin_dir}}/etcdctl get /traefik/acme/account/lock \
          --endpoints=https://127.0.0.1:{{etcd_client_port}} \
          --cacert={{k8s_conf_dir}}/ca-etcd.pem \
          --cert={{k8s_conf_dir}}/cert-traefik.pem \
          --key={{k8s_conf_dir}}/cert-traefik-key.pem
      register: lock_configured
      run_once: true
      delegate_to: "{{groups.k8s_etcd|first}}"
      tags:
        - traefik-etcd-key
    
    - name: Create etcd key /traefik/acme/account/lock (if needed)
      shell: |
        ETCDCTL_API=3 sudo -E {{etcd_bin_dir}}/etcdctl put /traefik/acme/account/lock '' \
          --endpoints=https://127.0.0.1:{{etcd_client_port}} \
          --cacert={{k8s_conf_dir}}/ca-etcd.pem \
          --cert={{k8s_conf_dir}}/cert-traefik.pem \
          --key={{k8s_conf_dir}}/cert-traefik-key.pem
      when: lock_configured.stdout == ""
      run_once: true
      delegate_to: "{{groups.k8s_etcd|first}}"
      tags:
        - traefik-etcd-key

    - name: Check if etcd contains /traefik/acme/account/object key
      shell: |
        ETCDCTL_API=3 sudo -E {{etcd_bin_dir}}/etcdctl get /traefik/acme/account/object \
          --endpoints=https://127.0.0.1:{{etcd_client_port}} \
          --cacert={{k8s_conf_dir}}/ca-etcd.pem \
          --cert={{k8s_conf_dir}}/cert-traefik.pem \
          --key={{k8s_conf_dir}}/cert-traefik-key.pem
      register: object_configured
      run_once: true
      delegate_to: "{{groups.k8s_etcd|first}}"
      tags:
        - traefik-etcd-key

    - name: Create etcd key /traefik/acme/account/object (if needed)
      shell: |
        ETCDCTL_API=3 sudo -E {{etcd_bin_dir}}/etcdctl put /traefik/acme/account/object '' \
          --endpoints=https://127.0.0.1:{{etcd_client_port}} \
          --cacert={{k8s_conf_dir}}/ca-etcd.pem \
          --cert={{k8s_conf_dir}}/cert-traefik.pem \
          --key={{k8s_conf_dir}}/cert-traefik-key.pem
      when: object_configured.stdout == ""
      run_once: true
      delegate_to: "{{groups.k8s_etcd|first}}"
      tags:
        - traefik-etcd-key

    - name: Check if secret is already deployed
      shell: "kubectl get secret --namespace=kube-system traefik-etcd"
      register: kubectl
      failed_when: "not (('not found' in kubectl.stderr) or ('' in kubectl.stdout))"
      delegate_to: 127.0.0.1
      tags:
        - traefik-secret

    - name: Deploy secret (if needed)
      command: "kubectl create secret generic traefik-etcd --from-file={{k8s_ca_conf_directory}}/ca-etcd.pem --from-file={{k8s_ca_conf_directory}}/cert-traefik.pem --from-file={{k8s_ca_conf_directory}}/cert-traefik-key.pem --namespace=kube-system"
      when: kubectl.rc == 1
      delegate_to: 127.0.0.1
      tags:
        - traefik-secret

    - name: Create temporary deployment file for Traefik ClusterRole
      copy:
        content: "{{traefik_clusterrole}}"
        dest: "/tmp/traefik_clusterrole.yaml"
        mode: 0600
      delegate_to: 127.0.0.1
      tags:
        - traefik-clusterrole

    - name: Deploy Traefik ClusterRole
      command: "kubectl apply -f /tmp/traefik_clusterrole.yaml"
      delegate_to: 127.0.0.1
      tags:
        - traefik-clusterrole
    
    - name: Remove temporary Traefik ClusterRole deployment file
      file:
        path: "/tmp/traefik_clusterrole.yaml"
        state: absent
      delegate_to: 127.0.0.1
      tags:
        - traefik-clusterrole

    - name: Create temporary deployment file for Traefik ClusterRoleBinding
      copy:
        content: "{{traefik_clusterrolebinding}}"
        dest: "/tmp/traefik_clusterrolebinding.yaml"
        mode: 0600
      delegate_to: 127.0.0.1
      tags:
        - traefik-clusterrolebinding

    - name: Deploy Traefik ClusterRoleBinding
      command: "kubectl apply -f /tmp/traefik_clusterrolebinding.yaml"
      delegate_to: 127.0.0.1
      tags:
        - traefik-clusterrolebinding

    - name: Remove temporary Traefik ClusterRoleBinding deployment file
      file:
        path: "/tmp/traefik_clusterrolebinding.yaml"
        state: absent
      delegate_to: 127.0.0.1
      tags:
        - traefik-clusterrolebinding

    - name: Create temporary deployment file for Traefik ServiceAccount
      copy:
        content: "{{traefik_serviceaccount}}"
        dest: "/tmp/traefik_serviceaccount.yaml"
        mode: 0600
      delegate_to: 127.0.0.1
      tags:
        - traefik-serviceaccount

    - name: Deploy Traefik ServiceAccount
      command: "kubectl apply -f /tmp/traefik_serviceaccount.yaml"
      delegate_to: 127.0.0.1
      tags:
        - traefik-serviceaccount

    - name: Remove temporary Traefik ServiceAccount deployment file
      file:
        path: "/tmp/traefik_serviceaccount.yaml"
        state: absent
      delegate_to: 127.0.0.1
      tags:
        - traefik-serviceaccount

    - name: Create temporary deployment file for Traefik DaemonSet
      copy:
        content: "{{traefik_daemonset}}"
        dest: "/tmp/traefik_daemonset.yaml"
        mode: 0600
      delegate_to: 127.0.0.1
      tags:
        - traefik-daemonset

    - name: Deploy Traefik DaemonSet
      command: "kubectl apply -f /tmp/traefik_daemonset.yaml"
      delegate_to: 127.0.0.1
      tags:
        - traefik-daemonset

    - name: Remove temporary Traefik DaemonSet deployment file
      file:
        path: "/tmp/traefik_daemonset.yaml"
        state: absent
      delegate_to: 127.0.0.1
      tags:
        - traefik-daemonset

- hosts: k8s_etcd
  remote_user: root

  tasks:
    - name: Remove Traefik client certificates
      file:
        path: "{{ k8s_conf_dir }}/{{ item }}"
        state: absent
      loop:
        - cert-traefik.pem
        - cert-traefik-key.pem

