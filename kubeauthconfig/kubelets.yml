---
- hosts: k8s_kubectl

  tasks:
    - name: Generate a kubeconfig file for each worker node (set-cluster)
      shell: "kubectl config set-cluster {{k8s_config_cluster_name}} --certificate-authority={{k8s_ca_conf_directory}}/ca-k8s-apiserver.pem --embed-certs=true --server=https://{{hostvars[groups['k8s_controller'][0]]['ansible_'+hostvars[item]['k8s_interface']].ipv4.address}}:{{k8s_apiserver_secure_port}} --kubeconfig={{k8s_config_directory}}/{{item}}.kubeconfig"
      with_inventory_hostnames:
        - k8s_worker
      tags:
        - k8s-auth-config-kubelet

    - name: Generate a kubeconfig file for each worker node (set-credentials)
      shell: "kubectl config set-credentials system:node:{{hostvars[item]['ansible_hostname']}} --client-certificate={{k8s_ca_conf_directory}}/cert-{{item}}.pem --client-key={{k8s_ca_conf_directory}}/cert-{{item}}-key.pem --embed-certs=true --kubeconfig={{k8s_config_directory}}/{{item}}.kubeconfig"
      with_inventory_hostnames:
        - k8s_worker
      tags:
        - k8s-auth-config-kubelet

    - name: Generate a kubeconfig file for each worker node (set-context)
      shell: "kubectl config set-context default --cluster={{k8s_config_cluster_name}} --user=system:node:{{hostvars[item]['ansible_hostname']}} --kubeconfig={{k8s_config_directory}}/{{item}}.kubeconfig"
      with_inventory_hostnames:
        - k8s_worker
      tags:
        - k8s-auth-config-kubelet

    - name: Set use-context
      shell: "kubectl config use-context default --kubeconfig={{k8s_config_directory}}/{{item}}.kubeconfig"
      with_inventory_hostnames:
        - k8s_worker
      tags:
        - k8s-auth-config-kubelet
